@use 'sass:list';
@use 'sass:string';

/// Returns the list of available names in a given map.
/// @param {Map} $map - The map of data to list the names from.
/// @param {number} $map - The level of depth to get names from.
/// @return {string} The list of names in the map.
@function available-names($map, $level: 1) {
  $output: '(';
  $i: 1;

  @if meta.type-of($map) != 'map' {
    @return null;
  }

  @each $key, $value in $map {
    $sep: if($i < list.length($map), ', ', '');
    $output: $output + '#{$key}#{$sep}#{available-names($value, $level + 1)}';
    $i: $i + 1;
  }

  $output: $output + ')'; // stylelint-disable-line order/order

  @return $output;
}

/// Replaces text in a string, using a search string.
/// @param {string} $string - The string to search and replace in.
/// @param {string} $search - The string to search for.
/// @param {string} $replace - The string to replace with.
/// @return {string} - The new string.
@function str-replace($string, $search, $replace: '') {
  $index: string.index($string, $search);

  @if $index {
    // stylelint-disable-next-line scss/operator-no-newline-after
    @return string.slice($string, 1, $index - 1) + $replace +
      str-replace(string.slice($string, $index + string.slice($search)), $search, $replace);
  }

  @return $string;
}
