@use 'sass:map';
@use 'sass:list';
@use '../../config' as *;

/// Generates keyframes from a map
/// @param {string} $name - The name of the animation
/// @param {Map} $map-animations - The map of animations
/// @return {mixin} - The keyframe-gen mixin.
@mixin keyframe-gen($name, $map-animations: $config-keyframes) {
  @keyframes #{$name} {
    @each $position, $change in map.get($map-animations, $name) {
      #{$position} {
        // stylelint-disable-next-line max-nesting-depth
        @each $prop, $val in $change {
          #{$prop}: #{$val};
        }
      }
    }
  }
}

/// Generates animation property from existing keyframes
/// @param {string} $name - The name of the animation
/// @param {string} $duration - The duration of the animation
/// @param {string} $timing - The timing function of the animation
/// @param {string} $delay - The delay of the animation
/// @param {string} $iterations - The iterations of the animation
/// @param {string} $direction - The direction of the animation
/// @return {mixin} - The animate mixin.
@mixin animate($name, $duration: null, $timing: null, $delay: null, $iterations: null, $direction: null) {
  $exists: list.index($included-animations, '#{$name}');

  @if not $exists {
    $included-animations: list.append($included-animations, '#{$name}') !global;

    @at-root {
      @include keyframe-gen($name);
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    animation: $name $duration $timing $delay $iterations $direction;
  }
}
